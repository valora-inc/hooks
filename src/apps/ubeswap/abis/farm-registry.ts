// Took the event ABI I needed from https://github.com/Ubeswap/ubeswap-interface/blob/baaa4a029a04e16f92c8fcef3766bc87cb02d4dc/src/constants/abis/FarmRegistry.json
export const FarmInfoEventAbi = {
  anonymous: false,
  inputs: [
    {
      indexed: true,
      internalType: 'address',
      name: 'stakingAddress',
      type: 'address',
    },
    {
      indexed: true,
      internalType: 'bytes32',
      name: 'farmName',
      type: 'bytes32',
    },
    {
      indexed: true,
      internalType: 'address',
      name: 'lpAddress',
      type: 'address',
    },
  ],
  name: 'FarmInfo',
  type: 'event',
} as const

export const FarmAbi = [
  {
    inputs: [
      {
        internalType: 'contract IUniswapV3Factory',
        name: '_factory',
        type: 'address',
      },
      {
        internalType: 'contract INonfungiblePositionManager',
        name: '_nonfungiblePositionManager',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_maxIncentiveStartLeadTime',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_maxIncentivePeriodDuration',
        type: 'uint256',
      },
      { internalType: 'uint256', name: '_maxLockTime', type: 'uint256' },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  { inputs: [], name: 'AccessControlBadConfirmation', type: 'error' },
  {
    inputs: [
      { internalType: 'address', name: 'account', type: 'address' },
      { internalType: 'bytes32', name: 'neededRole', type: 'bytes32' },
    ],
    name: 'AccessControlUnauthorizedAccount',
    type: 'error',
  },
  {
    inputs: [{ internalType: 'address', name: 'target', type: 'address' }],
    name: 'AddressEmptyCode',
    type: 'error',
  },
  {
    inputs: [{ internalType: 'address', name: 'account', type: 'address' }],
    name: 'AddressInsufficientBalance',
    type: 'error',
  },
  { inputs: [], name: 'FailedInnerCall', type: 'error' },
  {
    inputs: [{ internalType: 'address', name: 'token', type: 'address' }],
    name: 'SafeERC20FailedOperation',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'oldOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'DepositTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'incentiveId',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'uint128',
        name: 'refund',
        type: 'uint128',
      },
    ],
    name: 'ExcessRewardsRefunded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'incentiveId',
        type: 'bytes32',
      },
      { indexed: false, internalType: 'address', name: 'to', type: 'address' },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'reward',
        type: 'uint256',
      },
    ],
    name: 'ExternalRewardCollected',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'recipient',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint128',
        name: 'amount0Max',
        type: 'uint128',
      },
      {
        indexed: false,
        internalType: 'uint128',
        name: 'amount1Max',
        type: 'uint128',
      },
    ],
    name: 'FeeCollected',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'incentiveId',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'contract IERC20',
        name: 'rewardToken',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'contract IUniswapV3Pool',
        name: 'pool',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint32',
        name: 'startTime',
        type: 'uint32',
      },
      {
        indexed: false,
        internalType: 'uint32',
        name: 'lockTime',
        type: 'uint32',
      },
      {
        indexed: false,
        internalType: 'int24',
        name: 'minimumTickRange',
        type: 'int24',
      },
      {
        indexed: false,
        internalType: 'int24',
        name: 'maxTickLower',
        type: 'int24',
      },
      {
        indexed: false,
        internalType: 'int24',
        name: 'minTickLower',
        type: 'int24',
      },
      {
        indexed: false,
        internalType: 'int24',
        name: 'maxTickUpper',
        type: 'int24',
      },
      {
        indexed: false,
        internalType: 'int24',
        name: 'minTickUpper',
        type: 'int24',
      },
    ],
    name: 'IncentiveCreated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'incentiveId',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'uint32',
        name: 'newPeriodId',
        type: 'uint32',
      },
      {
        indexed: false,
        internalType: 'uint32',
        name: 'duration',
        type: 'uint32',
      },
      {
        indexed: false,
        internalType: 'uint128',
        name: 'reward',
        type: 'uint128',
      },
    ],
    name: 'IncentiveExtended',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'incentiveId',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'uint32',
        name: 'timestamp',
        type: 'uint32',
      },
      {
        indexed: false,
        internalType: 'uint32',
        name: 'newPeriodId',
        type: 'uint32',
      },
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'merkleRoot',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'ipfsHash',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'uint128',
        name: 'distributedRewardsSinceLastUpdate',
        type: 'uint128',
      },
      {
        indexed: false,
        internalType: 'uint128',
        name: 'activeTvlNative',
        type: 'uint128',
      },
      {
        indexed: false,
        internalType: 'uint128',
        name: 'externalTvlNative',
        type: 'uint128',
      },
    ],
    name: 'IncentiveUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'incentiveId',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'uint32',
        name: 'periodId',
        type: 'uint32',
      },
      {
        indexed: false,
        internalType: 'uint128',
        name: 'reward',
        type: 'uint128',
      },
    ],
    name: 'PeriodRewardIncreased',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'incentiveId',
        type: 'bytes32',
      },
      { indexed: true, internalType: 'address', name: 'to', type: 'address' },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'reward',
        type: 'uint256',
      },
    ],
    name: 'RewardCollected',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'bytes32', name: 'role', type: 'bytes32' },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'previousAdminRole',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'newAdminRole',
        type: 'bytes32',
      },
    ],
    name: 'RoleAdminChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'bytes32', name: 'role', type: 'bytes32' },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'RoleGranted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'bytes32', name: 'role', type: 'bytes32' },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'RoleRevoked',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'incentiveId',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'uint128',
        name: 'liquidity',
        type: 'uint128',
      },
      {
        indexed: false,
        internalType: 'uint32',
        name: 'initialSecondsInside',
        type: 'uint32',
      },
    ],
    name: 'TokenStaked',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'incentiveId',
        type: 'bytes32',
      },
    ],
    name: 'TokenUnstaked',
    type: 'event',
  },
  {
    inputs: [],
    name: 'DEFAULT_ADMIN_ROLE',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'INCENTIVE_MANAGER_ROLE',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'INCENTIVE_UPDATER_ROLE',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'REWARD_DISTRIBUTOR_ROLE',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'contract IERC20',
            name: 'rewardToken',
            type: 'address',
          },
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'pool',
            type: 'address',
          },
          { internalType: 'uint32', name: 'startTime', type: 'uint32' },
          { internalType: 'uint32', name: 'lockTime', type: 'uint32' },
          { internalType: 'int24', name: 'minimumTickRange', type: 'int24' },
          { internalType: 'int24', name: 'maxTickLower', type: 'int24' },
          { internalType: 'int24', name: 'minTickLower', type: 'int24' },
          { internalType: 'int24', name: 'maxTickUpper', type: 'int24' },
          { internalType: 'int24', name: 'minTickUpper', type: 'int24' },
        ],
        internalType: 'struct IUbeswapV3Farming.IncentiveKey',
        name: 'key',
        type: 'tuple',
      },
    ],
    name: 'collectExternalReward',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'uint256', name: 'tokenId', type: 'uint256' },
          { internalType: 'address', name: 'recipient', type: 'address' },
          { internalType: 'uint128', name: 'amount0Max', type: 'uint128' },
          { internalType: 'uint128', name: 'amount1Max', type: 'uint128' },
        ],
        internalType: 'struct INonfungiblePositionManager.CollectParams',
        name: 'params',
        type: 'tuple',
      },
    ],
    name: 'collectFee',
    outputs: [
      { internalType: 'uint256', name: 'amount0', type: 'uint256' },
      { internalType: 'uint256', name: 'amount1', type: 'uint256' },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'contract IERC20',
            name: 'rewardToken',
            type: 'address',
          },
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'pool',
            type: 'address',
          },
          { internalType: 'uint32', name: 'startTime', type: 'uint32' },
          { internalType: 'uint32', name: 'lockTime', type: 'uint32' },
          { internalType: 'int24', name: 'minimumTickRange', type: 'int24' },
          { internalType: 'int24', name: 'maxTickLower', type: 'int24' },
          { internalType: 'int24', name: 'minTickLower', type: 'int24' },
          { internalType: 'int24', name: 'maxTickUpper', type: 'int24' },
          { internalType: 'int24', name: 'minTickUpper', type: 'int24' },
        ],
        internalType: 'struct IUbeswapV3Farming.IncentiveKey',
        name: 'key',
        type: 'tuple',
      },
      { internalType: 'uint256', name: 'tokenId', type: 'uint256' },
      { internalType: 'uint128', name: 'accumulatedRewards', type: 'uint128' },
      { internalType: 'bytes32[]', name: 'proof', type: 'bytes32[]' },
    ],
    name: 'collectReward',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'contract IERC20',
            name: 'rewardToken',
            type: 'address',
          },
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'pool',
            type: 'address',
          },
          { internalType: 'uint32', name: 'startTime', type: 'uint32' },
          { internalType: 'uint32', name: 'lockTime', type: 'uint32' },
          { internalType: 'int24', name: 'minimumTickRange', type: 'int24' },
          { internalType: 'int24', name: 'maxTickLower', type: 'int24' },
          { internalType: 'int24', name: 'minTickLower', type: 'int24' },
          { internalType: 'int24', name: 'maxTickUpper', type: 'int24' },
          { internalType: 'int24', name: 'minTickUpper', type: 'int24' },
        ],
        internalType: 'struct IUbeswapV3Farming.IncentiveKey',
        name: 'key',
        type: 'tuple',
      },
      { internalType: 'uint32', name: 'duration', type: 'uint32' },
      { internalType: 'uint128', name: 'reward', type: 'uint128' },
    ],
    name: 'createIncentive',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    name: 'deposits',
    outputs: [
      { internalType: 'address', name: 'owner', type: 'address' },
      { internalType: 'uint48', name: 'numberOfStakes', type: 'uint48' },
      { internalType: 'int24', name: 'tickLower', type: 'int24' },
      { internalType: 'int24', name: 'tickUpper', type: 'int24' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'contract IERC20',
            name: 'rewardToken',
            type: 'address',
          },
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'pool',
            type: 'address',
          },
          { internalType: 'uint32', name: 'startTime', type: 'uint32' },
          { internalType: 'uint32', name: 'lockTime', type: 'uint32' },
          { internalType: 'int24', name: 'minimumTickRange', type: 'int24' },
          { internalType: 'int24', name: 'maxTickLower', type: 'int24' },
          { internalType: 'int24', name: 'minTickLower', type: 'int24' },
          { internalType: 'int24', name: 'maxTickUpper', type: 'int24' },
          { internalType: 'int24', name: 'minTickUpper', type: 'int24' },
        ],
        internalType: 'struct IUbeswapV3Farming.IncentiveKey',
        name: 'key',
        type: 'tuple',
      },
      { internalType: 'uint32', name: 'newPeriodId', type: 'uint32' },
      { internalType: 'uint32', name: 'duration', type: 'uint32' },
      { internalType: 'uint128', name: 'reward', type: 'uint128' },
    ],
    name: 'extendIncentive',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'externalRewardDistributor',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'factory',
    outputs: [
      { internalType: 'contract IUniswapV3Factory', name: '', type: 'address' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'incentiveId', type: 'bytes32' },
      { internalType: 'uint32', name: 'timestamp', type: 'uint32' },
    ],
    name: 'getAccumulatedReward',
    outputs: [
      { internalType: 'uint128', name: 'accumulatedReward', type: 'uint128' },
      { internalType: 'uint32', name: 'lastPeriodId', type: 'uint32' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes32', name: 'role', type: 'bytes32' }],
    name: 'getRoleAdmin',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'incentiveId', type: 'bytes32' },
      { internalType: 'uint256', name: 'index', type: 'uint256' },
    ],
    name: 'getStakedTokenByIndex',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'role', type: 'bytes32' },
      { internalType: 'address', name: 'account', type: 'address' },
    ],
    name: 'grantRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'role', type: 'bytes32' },
      { internalType: 'address', name: 'account', type: 'address' },
    ],
    name: 'hasRole',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: '', type: 'bytes32' },
      { internalType: 'uint32', name: '', type: 'uint32' },
    ],
    name: 'incentivePeriods',
    outputs: [
      { internalType: 'uint128', name: 'rewardPerSecond', type: 'uint128' },
      { internalType: 'uint32', name: 'startTime', type: 'uint32' },
      { internalType: 'uint32', name: 'endTime', type: 'uint32' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    name: 'incentives',
    outputs: [
      { internalType: 'uint32', name: 'currentPeriodId', type: 'uint32' },
      { internalType: 'uint32', name: 'lastUpdateTime', type: 'uint32' },
      { internalType: 'uint32', name: 'endTime', type: 'uint32' },
      { internalType: 'uint32', name: 'numberOfStakes', type: 'uint32' },
      { internalType: 'uint128', name: 'distributedRewards', type: 'uint128' },
      { internalType: 'bytes32', name: 'merkleRoot', type: 'bytes32' },
      { internalType: 'bytes32', name: 'ipfsHash', type: 'bytes32' },
      { internalType: 'uint128', name: 'excessRewards', type: 'uint128' },
      { internalType: 'uint128', name: 'externalRewards', type: 'uint128' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'contract IERC20',
            name: 'rewardToken',
            type: 'address',
          },
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'pool',
            type: 'address',
          },
          { internalType: 'uint32', name: 'startTime', type: 'uint32' },
          { internalType: 'uint32', name: 'lockTime', type: 'uint32' },
          { internalType: 'int24', name: 'minimumTickRange', type: 'int24' },
          { internalType: 'int24', name: 'maxTickLower', type: 'int24' },
          { internalType: 'int24', name: 'minTickLower', type: 'int24' },
          { internalType: 'int24', name: 'maxTickUpper', type: 'int24' },
          { internalType: 'int24', name: 'minTickUpper', type: 'int24' },
        ],
        internalType: 'struct IUbeswapV3Farming.IncentiveKey',
        name: 'key',
        type: 'tuple',
      },
      { internalType: 'uint32', name: 'periodId', type: 'uint32' },
      { internalType: 'uint128', name: 'reward', type: 'uint128' },
    ],
    name: 'increasePeriodReward',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maxIncentivePeriodDuration',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maxIncentiveStartLeadTime',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maxLockTime',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes[]', name: 'data', type: 'bytes[]' }],
    name: 'multicall',
    outputs: [{ internalType: 'bytes[]', name: 'results', type: 'bytes[]' }],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'nonfungiblePositionManager',
    outputs: [
      {
        internalType: 'contract INonfungiblePositionManager',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: '', type: 'address' },
      { internalType: 'address', name: 'from', type: 'address' },
      { internalType: 'uint256', name: 'tokenId', type: 'uint256' },
      { internalType: 'bytes', name: 'data', type: 'bytes' },
    ],
    name: 'onERC721Received',
    outputs: [{ internalType: 'bytes4', name: '', type: 'bytes4' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'contract IERC20',
            name: 'rewardToken',
            type: 'address',
          },
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'pool',
            type: 'address',
          },
          { internalType: 'uint32', name: 'startTime', type: 'uint32' },
          { internalType: 'uint32', name: 'lockTime', type: 'uint32' },
          { internalType: 'int24', name: 'minimumTickRange', type: 'int24' },
          { internalType: 'int24', name: 'maxTickLower', type: 'int24' },
          { internalType: 'int24', name: 'minTickLower', type: 'int24' },
          { internalType: 'int24', name: 'maxTickUpper', type: 'int24' },
          { internalType: 'int24', name: 'minTickUpper', type: 'int24' },
        ],
        internalType: 'struct IUbeswapV3Farming.IncentiveKey',
        name: 'key',
        type: 'tuple',
      },
    ],
    name: 'refundExcessRewards',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'role', type: 'bytes32' },
      { internalType: 'address', name: 'callerConfirmation', type: 'address' },
    ],
    name: 'renounceRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'role', type: 'bytes32' },
      { internalType: 'address', name: 'account', type: 'address' },
    ],
    name: 'revokeRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'contract IERC20',
            name: 'rewardToken',
            type: 'address',
          },
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'pool',
            type: 'address',
          },
          { internalType: 'uint32', name: 'startTime', type: 'uint32' },
          { internalType: 'uint32', name: 'lockTime', type: 'uint32' },
          { internalType: 'int24', name: 'minimumTickRange', type: 'int24' },
          { internalType: 'int24', name: 'maxTickLower', type: 'int24' },
          { internalType: 'int24', name: 'minTickLower', type: 'int24' },
          { internalType: 'int24', name: 'maxTickUpper', type: 'int24' },
          { internalType: 'int24', name: 'minTickUpper', type: 'int24' },
        ],
        internalType: 'struct IUbeswapV3Farming.IncentiveKey',
        name: 'key',
        type: 'tuple',
      },
      { internalType: 'uint256', name: 'tokenId', type: 'uint256' },
    ],
    name: 'stakeToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: '', type: 'bytes32' },
      { internalType: 'uint256', name: '', type: 'uint256' },
    ],
    name: 'stakes',
    outputs: [
      { internalType: 'uint128', name: 'claimedReward', type: 'uint128' },
      { internalType: 'uint32', name: 'stakeTime', type: 'uint32' },
      { internalType: 'uint32', name: 'initialSecondsInside', type: 'uint32' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes4', name: 'interfaceId', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'tokenId', type: 'uint256' },
      { internalType: 'address', name: 'to', type: 'address' },
    ],
    name: 'transferDeposit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'contract IERC20',
            name: 'rewardToken',
            type: 'address',
          },
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'pool',
            type: 'address',
          },
          { internalType: 'uint32', name: 'startTime', type: 'uint32' },
          { internalType: 'uint32', name: 'lockTime', type: 'uint32' },
          { internalType: 'int24', name: 'minimumTickRange', type: 'int24' },
          { internalType: 'int24', name: 'maxTickLower', type: 'int24' },
          { internalType: 'int24', name: 'minTickLower', type: 'int24' },
          { internalType: 'int24', name: 'maxTickUpper', type: 'int24' },
          { internalType: 'int24', name: 'minTickUpper', type: 'int24' },
        ],
        internalType: 'struct IUbeswapV3Farming.IncentiveKey',
        name: 'key',
        type: 'tuple',
      },
      { internalType: 'uint256', name: 'tokenId', type: 'uint256' },
    ],
    name: 'unstakeToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: '_new', type: 'address' }],
    name: 'updateExternalRewardDistributor',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'incentiveId', type: 'bytes32' },
      { internalType: 'uint32', name: 'timestamp', type: 'uint32' },
      { internalType: 'bytes32', name: 'merkleRoot', type: 'bytes32' },
      { internalType: 'bytes32', name: 'ipfsHash', type: 'bytes32' },
      {
        internalType: 'uint128',
        name: 'distributedRewardsSinceLastUpdate',
        type: 'uint128',
      },
      { internalType: 'uint128', name: 'activeTvlNative', type: 'uint128' },
      { internalType: 'uint128', name: 'externalTvlNative', type: 'uint128' },
    ],
    name: 'updateIncentiveDistributionInfo',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'tokenId', type: 'uint256' },
      { internalType: 'address', name: 'to', type: 'address' },
      { internalType: 'bytes', name: 'data', type: 'bytes' },
    ],
    name: 'withdrawToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]
